/**\n * Test script to verify the logo system is working\n * Run with: node test-logo-system.js\n */\n\nconst BASE_URL = 'http://localhost:3000';\n\nasync function testLogoSystem() {\n  console.log('üß™ Testing Logo System\\n');\n  \n  try {\n    // Test 1: Check logo statistics\n    console.log('üìä Checking logo coverage statistics...');\n    const statsResponse = await fetch(`${BASE_URL}/api/v1/admin/update-logos`);\n    const stats = await statsResponse.json();\n    \n    if (stats.success) {\n      console.log('‚úÖ Logo Statistics:');\n      console.log(`   Teams: ${stats.statistics.teams.withLogos}/${stats.statistics.teams.total} (${stats.statistics.teams.coverage}%)`);\n      console.log(`   Leagues: ${stats.statistics.leagues.withLogos}/${stats.statistics.leagues.total} (${stats.statistics.leagues.coverage}%)`);\n    } else {\n      console.log('‚ùå Failed to get statistics:', stats.error);\n    }\n    \n    // Test 2: Test team logo lookup\n    console.log('\\nüîç Testing team logo lookup...');\n    const testTeams = ['Manchester United', 'Liverpool', 'Arsenal', 'Botafogo FR'];\n    \n    for (const teamName of testTeams) {\n      try {\n        const response = await fetch(`${BASE_URL}/api/v1/teams?name=${encodeURIComponent(teamName)}`);\n        const result = await response.json();\n        \n        if (result.success && result.data) {\n          const hasLogo = result.data.logo_url ? '‚úÖ' : '‚ö†Ô∏è ';\n          console.log(`   ${hasLogo} ${teamName}: ${result.data.logo_url || 'No logo'}`);\n        } else {\n          console.log(`   ‚ùå ${teamName}: Not found in database`);\n        }\n      } catch (error) {\n        console.log(`   ‚ùå ${teamName}: Error - ${error.message}`);\n      }\n    }\n    \n    // Test 3: Trigger logo update (if you want to test this)\n    console.log('\\nüîÑ Want to trigger logo update? (This will actually fetch from APIs)');\n    console.log('   To test: POST to /api/v1/admin/update-logos?type=teams');\n    \n  } catch (error) {\n    console.error('‚ùå Test failed:', error.message);\n  }\n}\n\n// Only run if called directly\nif (require.main === module) {\n  testLogoSystem();\n}\n\nmodule.exports = { testLogoSystem };